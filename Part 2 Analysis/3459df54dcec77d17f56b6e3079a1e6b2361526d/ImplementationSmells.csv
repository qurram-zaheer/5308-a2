Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
temp,org.jsecurity.samples.spring.ui,WebStartView,afterPropertiesSet,Magic Number,The method contains a magic number: 20,81
temp,org.jsecurity.samples.spring.ui,WebStartView,afterPropertiesSet,Magic Number,The method contains a magic number: 300,81
temp,org.jsecurity.samples.spring.ui,WebStartView,afterPropertiesSet,Magic Number,The method contains a magic number: 200,81
temp,org.jsecurity.samples.spring.ui,WebStartView,actionPerformed,Long Statement,The length of the statement "JOptionPane.showMessageDialog(frame`"Unauthorized to perform action: " + ae.getMessage()`"Unauthorized"`JOptionPane.WARNING_MESSAGE);" is 133.,131
temp,org.jsecurity.samples.spring.web,JnlpController,handleRequestInternal,Magic Number,The method contains a magic number: 80,48
temp,org.jsecurity,AuthenticatingSecurityManager,getRequiredAuthenticator,Long Statement,The length of the statement "String msg="No authenticator attribute configured for this SecurityManager instance. Please ensure " + "the init() method is called prior to using this instance and a default one will be created.";" is 197.,94
temp,org.jsecurity,AuthenticatingSecurityManager,remove,Long Statement,The length of the statement "return (authc instanceof AuthenticationEventListenerRegistrar) && ((AuthenticationEventListenerRegistrar)authc).remove(listener);" is 129.,140
temp,org.jsecurity,AuthenticatingSecurityManager,assertAuthenticatorEventListenerSupport,Long Statement,The length of the statement "String msg="AuthenticationEventListener registration failed: The underlying Authenticator instance of " + "type [" + authc.getClass().getName() + "] does not implement the "+ AuthenticationEventListenerRegistrar.class.getName()+ " interface and therefore cannot support "+ "runtime registration of AuthenticationEventListeners.";" is 329.,160
temp,org.jsecurity,AuthenticatingSecurityManager,registerAnyAuthenticationEventListeners,Long Statement,The length of the statement "String msg="AuthenticationEventListeners collection property was configured` but the collection does " + "not contain any AuthenticationEventListener objects. This is considered a configuration error. " + "If you do not have any listener instances` do not set the property with an empty collection.";" is 300.,170
temp,org.jsecurity,AuthorizingSecurityManager,getRequiredAuthorizer,Long Statement,The length of the statement "String msg="No authorizer attribute configured for this SecurityManager instance. Please ensure " + "the init() method is called prior to using this instance and a default one will be created.";" is 194.,134
temp,org.jsecurity,CachingSecurityManager,createCacheProvider,Long Statement,The length of the statement "String msg="Instantiating default CacheProvider which will create in-memory HashTable caches. " + "This is NOT RECOMMENDED for production environments. Please ensure ehcache.jar is in the " + "classpath and JSecurity will automatically use a production-quality CacheProvider "+ "implementation` or you may alternatively provide your own via the #setCacheProvider method.";" is 372.,69
temp,org.jsecurity,DefaultSecurityManager,assertCreation,Long Statement,The length of the statement "String msg="Programming error - please verify that you have overridden the " + getClass().getName() + ".createSecurityContext( Account account ) method to return "+ "a non-null SecurityContext instance";" is 203.,190
temp,org.jsecurity,DefaultSecurityManager,rememberMeSuccessfulLogin,Long Statement,The length of the statement "String msg="Delegate RememberMeManager instance of type [" + rmm.getClass().getName() + "] threw an exception during onSuccessfulLogin. RememberMe services will not be "+ "performed for Account ["+ account+ "].";" is 212.,199
temp,org.jsecurity,DefaultSecurityManager,rememberMeSuccessfulLogin,Long Statement,The length of the statement "log.debug("This " + getClass().getName() + " instance does not have a "+ "["+ RememberMeManager.class.getName()+ "] instance configured. RememberMe services "+ "will not be performed for account ["+ account+ "].");" is 214.,199
temp,org.jsecurity,DefaultSecurityManager,rememberMeFailedLogin,Long Statement,The length of the statement "String msg="Delegate RememberMeManager instance of type [" + rmm.getClass().getName() + "] threw an exception during onFailedLogin for AuthenticationToken ["+ token+ "].";" is 171.,221
temp,org.jsecurity,DefaultSecurityManager,rememberMeLogout,Long Statement,The length of the statement "String msg="Delegate RememberMeManager instance of type [" + rmm.getClass().getName() + "] threw an exception during onLogout for subject with principals ["+ subjectPrincipals+ "]";" is 181.,237
temp,org.jsecurity,DefaultSecurityManager,getRememberedIdentity,Long Statement,The length of the statement "String msg="Delegate RememberMeManager instance of type [" + rmm.getClass().getName() + "] threw an exception during getRememberedIdentity().";" is 143.,299
temp,org.jsecurity,SessionsSecurityManager,ensureSessionFactory,Long Statement,The length of the statement "log.info("No delegate SessionFactory instance has been set as a property of this class. Creating a " + "default SessionFactory implementation...");" is 147.,118
temp,org.jsecurity,SessionsSecurityManager,assertSessionFactoryEventListenerSupport,Long Statement,The length of the statement "String msg="SessionEventListener registration failed: The underlying SessionFactory instance of " + "type [" + factory.getClass().getName() + "] does not implement the "+ SessionEventListenerRegistrar.class.getName()+ " interface and therefore cannot support "+ "runtime SessionEvent propagation.";" is 298.,161
temp,org.jsecurity,SessionsSecurityManager,remove,Long Statement,The length of the statement "return (this.sessionFactory instanceof SessionEventListenerRegistrar) && ((SessionEventListenerRegistrar)this.sessionFactory).remove(listener);" is 143.,177
temp,org.jsecurity,SessionsSecurityManager,registerAnySessionEventListeners,Long Statement,The length of the statement "String msg="SessionEventListeners collection property was configured` but the collection does " + "not contain any SessionEventListener objects. This is considered a configuration error. " + "If you do not have any listener instances` do not set the property with an empty collection.";" is 286.,182
temp,org.jsecurity,ActiveDirectoryRealmTest,testDefaultConfig,Magic Number,The method contains a magic number: 2,59
temp,org.jsecurity,AuthorizingRealmTest,testDefaultConfig,Magic Number,The method contains a magic number: 3,72
temp,org.jsecurity.authc.credential,SimpleCredentialsMatcher,equals,Long Statement,The length of the statement "log.info("At least one of the two credentials for comparsion is an array` but unable to " + "successfully convert both argments to arrays for array-equality comparison. Reverting " + "to simple Object.equals() check."`e);" is 221.,70
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="Subject with principals [" + event.getPrincipals() + "] successfully authenticated on ["+ df.format(event.getTimestamp())+ "]";" is 139.,62
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="Subject with principals [" + event.getPrincipals() + "] logged out on ["+ df.format(event.getTimestamp())+ "]";" is 123.,73
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="The account for the subject with principals [" + event.getPrincipals() + "] was unlocked on ["+ df.format(event.getTimestamp())+ "]";" is 145.,84
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="The account for the subject with principals [" + event.getPrincipals() + "] was locked on ["+ df.format(event.getTimestamp())+ "]";" is 143.,95
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="Login attempt for subject with principals [" + event.getPrincipals() + "] failed on ["+ df.format(event.getTimestamp())+ "]";" is 137.,95
temp,org.jsecurity.authc.event,LoggingAuthenticationEventListener,accept,Long Statement,The length of the statement "String msg="Received unrecognized event of type [" + event.getClass().getName() + "] for subject with "+ "principals ["+ event.getPrincipals()+ "].";" is 149.,119
temp,org.jsecurity.authc.event,SimpleAuthenticationEventSender,send,Long Statement,The length of the statement "String msg="internal listeners collection is null. No " + "AuthenticationEventListeners will be notified of event [" + event + "]";" is 131.,94
temp,org.jsecurity.authc.support,AbstractAuthenticator,assertSenderCanRegister,Long Statement,The length of the statement "String msg="The underlying AuthenticationEventSender implementation [" + sender.getClass().getName() + "] does not implement the "+ AuthenticationEventListenerRegistrar.class.getName()+ " interface and therefore "+ "AuthenticationEvents cannot be propagated to registered listeners. Please ensure this "+ "Authenticator instance is injected with an AuthenticationEventSender that supports this interface "+ "if you wish to register for AuthenticationEvents.";" is 459.,159
temp,org.jsecurity.authc.support,AbstractAuthenticator,remove,Long Statement,The length of the statement "return (sender instanceof AuthenticationEventListenerRegistrar) && ((AuthenticationEventListenerRegistrar)sender).remove(listener);" is 131.,177
temp,org.jsecurity.authc.support,AbstractAuthenticator,isEventSendErrorFailsAuthentication,Long Identifier,The length of the field eventSendErrorFailsAuthentication is 33.,183
temp,org.jsecurity.authc.support,AbstractAuthenticator,setEventSendErrorFailsAuthentication,Long Identifier,The length of the parameter eventSendErrorFailsAuthentication is 33.,203
temp,org.jsecurity.authc.support,AbstractAuthenticator,setEventSendErrorFailsAuthentication,Long Identifier,The length of the field eventSendErrorFailsAuthentication is 33.,203
temp,org.jsecurity.authc.support,AbstractAuthenticator,sendFailureEvent,Long Statement,The length of the statement "log.debug("No AuthenticationEvent instance returned from " + "'createFailureEvent' method call. No failed authentication " + "event will be sent.");" is 148.,249
temp,org.jsecurity.authc.support,AbstractAuthenticator,sendSuccessEvent,Long Statement,The length of the statement "String msg="Unable to send event [" + event + "]. This authenticator is configured to "+ "interpret an event sending error as a failure during the authentication process "+ "via the setEventSendErrorFailsAuthentication property. Authentication failed.";" is 253.,283
temp,org.jsecurity.authc.support,AbstractAuthenticator,sendSuccessEvent,Long Statement,The length of the statement "String msg="Unable to send AuthenticationEvent [" + event + "]. Ignoring send error "+ "(for system resiliency) and continuing with the authentication process. Please "+ "check your sender configuration and/or implementation.";" is 227.,283
temp,org.jsecurity.authc.support,AbstractAuthenticator,sendSuccessEvent,Long Statement,The length of the statement "log.debug("No AuthenticationEvent instance returned from " + "'createSuccessEvent' method call. No success " + "event will be sent.");" is 134.,283
temp,org.jsecurity.authc.support,AbstractAuthenticator,authenticate,Complex Method,Cyclomatic complexity of the method is 9,358
temp,org.jsecurity.authc.support,AbstractAuthenticator,authenticate,Long Statement,The length of the statement "String msg="Authentication token [" + token + "] could not be processed for authentication by this "+ "Authenticator instance. Please check that it is configured correctly.";" is 174.,358
temp,org.jsecurity.authc.support,AbstractAuthenticator,authenticate,Long Statement,The length of the statement "String msg="Authentication failed for token submission [" + token + "]. Possible unexpected "+ "error? (Typical or expected login exceptions should extend from AuthenticationException).";" is 187.,358
temp,org.jsecurity.authc.support,AbstractAuthenticator,authenticate,Long Statement,The length of the statement "String msg="Unable to send event for failed authentication attempt. Please check the " + "authenticationEventSender implementation. Logging sending exception and propagating " + "original AuthenticationException instead...";" is 224.,358
temp,org.jsecurity.authc.support,AllSuccessfulModularAuthenticationStrategy,beforeAttempt,Long Statement,The length of the statement "String msg="Realm [" + realm + "] of type ["+ realm.getClass().getName()+ "] does not support "+ " the submitted AuthenticationToken ["+ token+ "]. The ["+ getClass().getName()+ "] implementation requires all configured realm(s) to support and be able to process the submitted "+ "AuthenticationToken.";" is 303.,52
temp,org.jsecurity.authc.support,AllSuccessfulModularAuthenticationStrategy,afterAttempt,Long Statement,The length of the statement "String msg="Unable to acquire account data from realm [" + realm + "]. The ["+ getClass().getName()+ " implementation requires all configured realm(s) to operate successfully "+ "for a successful authentication.";" is 213.,62
temp,org.jsecurity.authc.support,AllSuccessfulModularAuthenticationStrategy,afterAttempt,Long Statement,The length of the statement "String msg="Realm [" + realm + "] could not find any associated account data for the submitted "+ "AuthenticationToken ["+ token+ "]. The ["+ getClass().getName()+ "] implementation requires "+ "all configured realm(s) to acquire valid account data for a submitted token during the "+ "log-in process.";" is 303.,62
temp,org.jsecurity.authc.support,AtLeastOneSuccessfulModularAuthenticationStrategy,afterAllAttempts,Long Statement,The length of the statement "throw new AuthenticationException("Authentication token of type [" + token.getClass() + "] "+ "could not be authenticated by any configured realms. Please ensure that at least one realm can "+ "authenticate these tokens.");" is 223.,64
temp,org.jsecurity.authc.support,ModularRealmAuthenticator,doSingleRealmAuthentication,Long Statement,The length of the statement "String msg="Single configured realm [" + realm + "] does not support authentication token ["+ token+ "]. Please ensure that the appropriate Realm implementation is "+ "configured correctly or that the realm accepts AuthenticationTokens of this type.";" is 251.,189
temp,org.jsecurity.authc.support,ModularRealmAuthenticator,doSingleRealmAuthentication,Long Statement,The length of the statement "String msg="Single configured realm [" + realm + "] was unable to find account data for the "+ "submitted AuthenticationToken ["+ token+ "].";" is 142.,189
temp,org.jsecurity.authc.support,ModularRealmAuthenticator,doMultiRealmAuthentication,Complex Method,Cyclomatic complexity of the method is 9,213
temp,org.jsecurity.authc.support,ModularRealmAuthenticator,doMultiRealmAuthentication,Long Statement,The length of the statement "log.debug("Realm of type [" + realm.getClass().getName() + "] does not support token "+ "["+ token+ "]. Skipping realm.");" is 122.,213
temp,org.jsecurity.authc.support,SimpleAccount,SimpleAccount,Long Parameter List,The method has 5 parameters. ,86
temp,org.jsecurity.authc.support,SimpleAccount,merge,Complex Method,Cyclomatic complexity of the method is 10,141
temp,org.jsecurity.authz.aop,AnnotationsAuthorizingMethodInterceptor,init,Magic Number,The method contains a magic number: 2,51
temp,org.jsecurity.authz.aop,PermissionAnnotationMethodInterceptor,inferTargetFromPath,Magic Number,The method contains a magic number: 2,52
temp,org.jsecurity.authz.permission,WildcardPermission,WildcardPermission,Long Statement,The length of the statement "throw new IllegalArgumentException("Wildcard string cannot be null or empty. Make sure permission strings are properly formatted.");" is 132.,36
temp,org.jsecurity.authz.permission,WildcardPermission,WildcardPermission,Long Statement,The length of the statement "throw new IllegalArgumentException("Wildcard string cannot contain parts with only dividers. Make sure permission strings are properly formatted.");" is 148.,36
temp,org.jsecurity.authz.permission,WildcardPermission,WildcardPermission,Long Statement,The length of the statement "throw new IllegalArgumentException("Wildcard string cannot contain only dividers. Make sure permission strings are properly formatted.");" is 137.,36
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildCache,Long Identifier,The length of the field DEFAULT_ACTIVE_SESSIONS_CACHE_NAME is 34.,93
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildCache,Long Statement,The length of the statement "log.info("Creating " + DEFAULT_ACTIVE_SESSIONS_CACHE_NAME + " cache with default JSecurity "+ "session cache settings.");" is 121.,93
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildDefaultActiveSessionsCache,Long Identifier,The length of the field DEFAULT_ACTIVE_SESSIONS_CACHE_NAME is 34.,133
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildDefaultActiveSessionsCache,Long Identifier,The length of the field DEFAULT_ACTIVE_SESSIONS_CACHE_MAX_ELEM_IN_MEM is 45.,133
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildDefaultActiveSessionsCache,Long Identifier,The length of the field DEFAULT_ACTIVE_SESSIONS_DISK_EXPIRY_THREAD_INTERVAL_SECONDS is 59.,133
temp,org.jsecurity.cache.ehcache,EhCacheProvider,buildDefaultActiveSessionsCache,Long Statement,The length of the statement "return new net.sf.ehcache.Cache(DEFAULT_ACTIVE_SESSIONS_CACHE_NAME`DEFAULT_ACTIVE_SESSIONS_CACHE_MAX_ELEM_IN_MEM`true`true`0`0`true`DEFAULT_ACTIVE_SESSIONS_DISK_EXPIRY_THREAD_INTERVAL_SECONDS);" is 193.,133
temp,org.jsecurity.codec,Base64,encodeBase64,Complex Method,Cyclomatic complexity of the method is 11,267
temp,org.jsecurity.codec,Base64,encodeBase64,Long Statement,The length of the statement "throw new IllegalArgumentException("Input array too big` output array would be bigger than Integer.MAX_VALUE=" + Integer.MAX_VALUE);" is 132.,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 3,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x0f,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x03,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xc0,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xf0,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 6,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 6,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xfc,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 3,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x3f,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 3,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x03,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xc0,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 3,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x0f,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0x03,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xc0,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 0xf0,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 4,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 2,267
temp,org.jsecurity.codec,Base64,encodeBase64,Magic Number,The method contains a magic number: 3,267
temp,org.jsecurity.codec,Base64,decodeBase64,Complex Method,Cyclomatic complexity of the method is 8,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 3,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 0xf,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 0xf,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 6,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 0xf,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 4,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 2,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 0xf,399
temp,org.jsecurity.codec,Base64,decodeBase64,Magic Number,The method contains a magic number: 3,399
temp,org.jsecurity.codec,Base64,discardWhitespace,Missing default,The following switch statement is missing a default case: switch (data[i]) {,465
temp,org.jsecurity.codec,CodecSupport,objectToBytes,Long Statement,The length of the statement "String msg="The " + getClass().getName() + " implementation only supports conversion to "+ "bytes[] if the source is of type byte[]` char[] or String. The instance provided as a method "+ "argument is of type ["+ o.getClass().getName()+ "]. If you would like to convert "+ "this argument type to a byte[]` you can 1) convert the argument to a byte[]` char[] or String "+ "yourself and then use that as the method argument or 2) subclass "+ getClass().getName()+ " and override the objectToBytes(Object o) method.";" is 514.,139
temp,org.jsecurity.codec,CodecSupport,objectToString,Long Statement,The length of the statement "String msg="The " + getClass().getName() + " implementation only supports conversion to a String "+ "when the source is of type byte[]` char[]` or String. The instance provided as a method argument "+ "is of type ["+ o.getClass().getName()+ "]. If you would like to convert "+ "this argument type to a String` you can 1) convert the argument to a byte[]` char[] or String yourself "+ "and use that as the method argument or 2) subclass "+ getClass().getName()+ " and override the "+ "objectToString(Object o) method.";" is 518.,157
temp,org.jsecurity.codec,Hex,decode,Magic Number,The method contains a magic number: 4,94
temp,org.jsecurity.codec,Hex,decode,Magic Number,The method contains a magic number: 0xFF,94
temp,org.jsecurity.codec,Hex,toDigit,Magic Number,The method contains a magic number: 16,129
temp,org.jsecurity.codec,Hex,encode,Magic Number,The method contains a magic number: 0xF0,145
temp,org.jsecurity.codec,Hex,encode,Magic Number,The method contains a magic number: 4,145
temp,org.jsecurity.codec,Hex,encode,Magic Number,The method contains a magic number: 0x0F,145
temp,org.jsecurity.context,AbstractRememberMeManager,isRememberMe,Long Statement,The length of the statement "return token != null && (token instanceof RememberMeAuthenticationToken) && ((RememberMeAuthenticationToken)token).isRememberMe();" is 130.,99
temp,org.jsecurity.context,AbstractRememberMeManager,onSuccessfulLogin,Long Statement,The length of the statement "log.debug("AuthenticationToken did not indicate RememberMe is requested. " + "RememberMe functionality will not be executed for corresponding Account.");" is 153.,104
temp,org.jsecurity.context,DelegatingSecurityContext,DelegatingSecurityContext,Long Parameter List,The method has 5 parameters. ,99
temp,org.jsecurity.context,DelegatingSecurityContext,assertAuthzCheckPossible,Long Statement,The length of the statement "String msg="Subject/User data has not yet been associated with this SecurityContext " + "(this can be done by executing " + SecurityContext.class.getName() + ".login(AuthenticationToken) )."+ "Therefore` authorization operations are not possible (a Subject/User identity is required first). "+ "Denying authorization.";" is 319.,247
temp,org.jsecurity.context,DelegatingSecurityContext,login,Long Statement,The length of the statement "String msg="Principals returned from securityManager.login( token ) returned a null or " + "empty value. This value must be non null` and if a collection` the collection must " + "be populated with one or more elements. Please check the SecurityManager "+ "implementation to ensure this happens after a successful login attempt.";" is 330.,314
temp,org.jsecurity.crypto,SimpleBlowfishCipher,newCipherInstance,Long Statement,The length of the statement "String msg="Unable to acquire a Java JCE Cipher instance using " + javax.crypto.Cipher.class.getName() + ".getInstance( \""+ TRANSFORMATION_STRING+ "\" ). "+ "Blowfish under this configuration is required for the "+ getClass().getName()+ " instance to function.";" is 263.,86
temp,org.jsecurity.crypto,SimpleBlowfishCipher,crypt,Long Statement,The length of the statement "String msg="The " + getClass().getName() + " implementation only accepts "+ Key.class.getName()+ " instances that also implement the "+ java.security.Key.class.getName()+ " interface. The argument used is of type ["+ key.getClass().getName()+ "].";" is 248.,116
temp,org.jsecurity.crypto,SimpleBlowfishCipher,main,Long Statement,The length of the statement "String[] cleartext=new String[]{"Hello` this is a test."`"Lorem ipsum dolor sit amet` consectetur adipisicing elit` sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."};" is 185.,133
temp,org.jsecurity.realm,AuthenticatingRealm,supports,Long Statement,The length of the statement "log.info("Received null AuthenticationToken. Returning false for supports(token) implementation (can't " + "process null tokens).");" is 132.,128
temp,org.jsecurity.realm,AuthenticatingRealm,getAccount,Long Statement,The length of the statement "throw new AuthenticationException("A CredentialsMatcher must be configured in order to verify " + "credentials during authentication. If you do not wish for credentials to be examined` you " + "can configure an AllowAllCredentialsMatcher.");" is 241.,181
temp,org.jsecurity.realm,AuthorizingRealm,init,Complex Method,Cyclomatic complexity of the method is 9,144
temp,org.jsecurity.realm,AuthorizingRealm,init,Long Statement,The length of the statement "log.info("No cache or cacheProvider properties have been set. AuthorizingAccount caching is " + "disabled for realm [" + getName() + "]");" is 138.,144
temp,org.jsecurity.realm,AuthorizingRealm,getAccount,Complex Method,Cyclomatic complexity of the method is 11,231
temp,org.jsecurity.realm,AuthorizingRealm,assertNotNullAccount,Long Statement,The length of the statement "throw new MissingAccountException("No Account found for Subject principal [" + subjectPrincipal + "] in realm ["+ getName()+ "]");" is 130.,288
temp,org.jsecurity.realm,AuthorizingRealm,assertAuthorizingAccount,Long Statement,The length of the statement "String msg="Underlying Account instance [" + account + "] does not implement the "+ AuthorizingAccount.class.getName()+ " interface. The JSecurity "+ AuthorizingRealm.class.getName()+ " class and its default implementations can only provide default "+ "authorization (access control) support for Accounts that implement this interface. If you do not "+ "wish to implement this interface` you will need to override all of this Realm's Authorizer methods "+ "to perform the authorization check explicitly.\n\nNote that there is nothing wrong with this "+ "approach since it often gives finer control of how authorization checks occur` but you would have "+ "to override these methods explicitly since JSecurity can't infer your application's security "+ "data model.";" is 766.,295
temp,org.jsecurity.realm,PropertiesRealm,onInit,Long Statement,The length of the statement "log.info("Unable to find a jsecurity-users.properties file at location [" + this.filePath + "]. "+ "Defaulting to JSecurity's failsafe properties file (Guest user only).");" is 172.,126
temp,org.jsecurity.realm,PropertiesRealm,startReloadThread,Long Statement,The length of the statement "((ScheduledExecutorService)this.scheduler).scheduleAtFixedRate(this`reloadIntervalSeconds`reloadIntervalSeconds`TimeUnit.SECONDS);" is 130.,154
temp,org.jsecurity.realm,PropertiesRealm,reloadProperties,Empty catch clause,The method has an empty catch block.,228
temp,org.jsecurity.realm,PropertiesRealm,reloadProperties,Long Statement,The length of the statement "throw new IllegalStateException("The filePath property is not set. " + "It must be set prior to this realm being initialized.");" is 128.,228
temp,org.jsecurity.realm,PropertiesRealm,createRealmEntitiesFromProperties,Long Statement,The length of the statement "String msg="Encountered unexpected key/value pair. All keys must be prefixed with either '" + USERNAME_PREFIX + "' or '"+ ROLENAME_PREFIX+ "'.";" is 144.,271
temp,org.jsecurity.realm,PropertiesRealm,loadProperties,Long Statement,The length of the statement "throw new JSecurityException("Error reading properties path [" + filePath + "]. "+ "Initializing of the realm from this file failed."`e);" is 137.,309
temp,org.jsecurity.realm,SimpleAccountRealm,processUserDefinitions,Complex Method,Cyclomatic complexity of the method is 8,253
temp,org.jsecurity.realm,SimpleAccountRealm,processUserDefinitions,Magic Number,The method contains a magic number: 2,253
temp,org.jsecurity.realm,SimpleAccountRealm,processRoleDefinitions,Long Statement,The length of the statement "List<Permission> permissions=PermissionUtils.resolveDelimitedPermissions(value`getPermissionResolver()`PERMISSION_DELIMITER);" is 125.,296
temp,org.jsecurity.realm,SimpleAccountRealm,toMap,Long Statement,The length of the statement "String msg="Invalid definition entry [" + pairString + "]. Key/Value pairs must be separated "+ "by an equals character (=)";" is 125.,317
temp,org.jsecurity.realm,SimpleAccountRealm,toMap,Magic Number,The method contains a magic number: 2,317
temp,org.jsecurity.realm.jdbc,JdbcRealm,getPasswordForUser,Long Statement,The length of the statement "throw new AuthenticationException("More than one user row found for user [" + username + "]. Usernames must be unique.");" is 121.,220
temp,org.jsecurity.realm.ldap,DefaultLdapContextFactory,getLdapContext,Long Identifier,The length of the field SUN_CONNECTION_POOLING_PROPERTY is 31.,204
temp,org.jsecurity.realm.ldap,DefaultLdapContextFactory,getLdapContext,Long Statement,The length of the statement "log.debug("Initializing LDAP context using URL [" + url + "] and username ["+ systemUsername+ "] "+ "with pooling ["+ (usePooling ? "enabled" : "disabled")+ "]");" is 162.,204
temp,org.jsecurity.session.event,LoggingSessionEventListener,accept,Long Statement,The length of the statement "String msg="Received unrecognized event of type [" + event.getClass().getName() + "] for session with "+ "id ["+ event.getSessionId()+ "].";" is 140.,67
temp,org.jsecurity.session.support,AbstractSessionManager,init,Long Statement,The length of the statement "String msg="sessionDAO property has not been set. The sessionDAO is required to " + "access session objects during runtime.";" is 125.,166
temp,org.jsecurity.session.support,AbstractSessionManager,validate,Long Statement,The length of the statement "String msg="originatingHost argument is null. A valid non-null originating " + "host address must be specified when initiating a session";" is 138.,206
temp,org.jsecurity.session.support,AbstractSessionManager,validate,Long Statement,The length of the statement "String msg="Session with id [" + sessionId + "] has expired. "+ "Last access time: "+ df.format(lastAccessTime)+ ". Current time: "+ df.format(new Date())+ ". Session timeout is set to "+ timeout / MILLIS_PER_SECOND + " seconds (" + timeout / MILLIS_PER_MINUTE + " minutes)";" is 275.,264
temp,org.jsecurity.session.support,AbstractSessionManager,validate,Long Statement,The length of the statement "String msg="Session with id [" + session.getSessionId() + "] has been "+ "explicitly stopped. No further interaction under this session is "+ "allowed.";" is 153.,264
temp,org.jsecurity.session.support,AbstractSessionManager,isExpired,Long Statement,The length of the statement "String msg="session.lastAccessTime for session with id [" + session.getSessionId() + "] is null. This value must be set at "+ "least once. Please check the "+ session.getClass().getName()+ " implementation and ensure "+ "this value will be set (perhaps in the constructor?)";" is 275.,416
temp,org.jsecurity.session.support,DefaultSessionFactory,assertSessionManagerEventNotifier,Long Statement,The length of the statement "String msg="The underlying SessionManager implementation [" + this.sessionManager.getClass().getName() + "] does not implement the "+ SessionEventListenerRegistrar.class.getName()+ " interface and therefore session events cannot "+ "be propagated to registered listeners. Please ensure this SessionFactory instance is "+ "injected with a SessionManager that supports this interface if you wish to register "+ "for SessionEvents.";" is 430.,86
temp,org.jsecurity.session.support,DefaultSessionFactory,remove,Long Statement,The length of the statement "return this.sessionManager instanceof SessionEventListenerRegistrar && ((SessionEventListenerRegistrar)this.sessionManager).remove(listener);" is 141.,103
temp,org.jsecurity.session.support,DefaultSessionFactory,ensureSessionManager,Long Statement,The length of the statement "log.info("No SessionManager instance has been set as a property of this class. " + "Defaulting to the default SessionManager implementation.");" is 143.,117
temp,org.jsecurity.session.support,SimpleSession,SimpleSession,Long Statement,The length of the statement "log.warn("Unable to acquire localhost address from " + "method call java.net.InetAddress.getLocalHost(). hostAddress " + "will be null"`e);" is 139.,56
temp,org.jsecurity.session.support.eis,CachingSessionDAO,ensureUncached,Long Statement,The length of the statement "String msg="There is an existing session already created with session id [" + sessionId + "]. Session ID's must be unique.";" is 124.,206
temp,org.jsecurity.session.support.eis,MemorySessionDAO,getRandomNumberGenerator,Long Identifier,The length of the field RANDOM_NUM_GENERATOR_ALGORITHM_NAME is 35.,71
temp,org.jsecurity.session.support.eis,MemorySessionDAO,getRandomNumberGenerator,Long Statement,The length of the statement "String msg="On JDK 1.4 platforms and below` please ensure the JUG jar file is in the classpath for " + "valid Session ID generation. Defaulting to SecureRandom based id generation for now " + "(NOT recommended for production systems - please add the JUG jar as soon as convenient).";" is 283.,71
temp,org.jsecurity.session.support.quartz,QuartzSessionValidationScheduler,startSessionValidation,Long Statement,The length of the statement "log.debug("Scheduling session validation job using Quartz with " + "session validation interval of [" + sessionValidationInterval + "]ms...");" is 142.,143
temp,org.jsecurity.session.support.quartz,QuartzSessionValidationScheduler,startSessionValidation,Long Statement,The length of the statement "SimpleTrigger trigger=new SimpleTrigger(getClass().getName()`Scheduler.DEFAULT_GROUP`SimpleTrigger.REPEAT_INDEFINITELY`sessionValidationInterval);" is 146.,143
temp,org.jsecurity.session.support.quartz,QuartzSessionValidationScheduler,stopSessionValidation,Complex Method,Cyclomatic complexity of the method is 9,184
temp,org.jsecurity.session.support.quartz,QuartzSessionValidationScheduler,stopSessionValidation,Long Statement,The length of the statement "log.warn("getScheduler() method returned a null Quartz scheduler` which is unexpected. Please " + "check your configuration and/or implementation. Returning quietly since there is no " + "validation job to remove (scheduler does not exist).");" is 243.,184
temp,org.jsecurity.util,AntPathMatcher,doMatch,Complex Conditional,The conditional expression pattIdxStart == pattIdxEnd && pattDirs[pattIdxStart].equals("*") && path.endsWith(this.pathSeparator) is complex.,116
temp,org.jsecurity.util,AntPathMatcher,doMatch,Complex Method,Cyclomatic complexity of the method is 29,116
temp,org.jsecurity.util,AntPathMatcher,doMatch,Long Method,The method has 102 lines of code.,116
temp,org.jsecurity.util,AntPathMatcher,matchStrings,Complex Method,Cyclomatic complexity of the method is 32,251
temp,org.jsecurity.util,AntPathMatcher,matchStrings,Long Method,The method has 106 lines of code.,251
temp,org.jsecurity.util,AntPathMatcher,extractPathWithinPattern,Complex Conditional,The conditional expression (patternPart.indexOf('*') > -1 || patternPart.indexOf('?') > -1) && pathParts.length >= i + 1 is complex.,397
temp,org.jsecurity.util,AntPathMatcher,extractPathWithinPattern,Complex Conditional,The conditional expression puts > 0 || (i == 0 && !pattern.startsWith(this.pathSeparator)) is complex.,397
temp,org.jsecurity.util,CollectionUtils,newLinkedHashSet,Magic Number,The method contains a magic number: 4,12
temp,org.jsecurity.util,CollectionUtils,newLinkedHashSet,Magic Number,The method contains a magic number: 3,12
temp,org.jsecurity.util,CollectionUtils,computeArrayListCapacity,Magic Number,The method contains a magic number: 5L,26
temp,org.jsecurity.util,CollectionUtils,computeArrayListCapacity,Magic Number,The method contains a magic number: 10,26
temp,org.jsecurity.util,ThreadContext,get,Long Statement,The length of the statement "String msg="Retrieved value of type [" + value.getClass().getName() + "] for key ["+ key+ "] "+ "bound to thread ["+ Thread.currentThread().getName()+ "]";" is 155.,86
temp,org.jsecurity.util,ThreadContext,put,Long Statement,The length of the statement "String msg="Bound value of type [" + value.getClass().getName() + "] for key ["+ key+ "] to thread "+ "["+ Thread.currentThread().getName()+ "]";" is 145.,108
temp,org.jsecurity.util,ThreadContext,remove,Long Statement,The length of the statement "String msg="Removed value of type [" + value.getClass().getName() + "] for key ["+ key+ "]"+ "from thread ["+ Thread.currentThread().getName()+ "]";" is 148.,142
temp,org.jsecurity.web,DefaultWebSecurityManager,setSessionFactory,Long Statement,The length of the statement "String msg="The " + getClass().getName() + " implementation requires its underlying SessionFactory "+ "instance to also implement the "+ WebSessionFactory.class.getName()+ " interface as well. "+ "The SessionFactory instance in question is of type ["+ sessionFactory.getClass().getName()+ "].";" is 294.,66
temp,org.jsecurity.web,DefaultWebSecurityManager,createSecurityContext,Long Parameter List,The method has 5 parameters. ,158
temp,org.jsecurity.web.servlet,JSecurityHttpServletRequest,isRequestedSessionIdValid,Long Identifier,The length of the field REFERENCED_SESSION_ID_IS_VALID is 30.,147
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Complex Method,Cyclomatic complexity of the method is 11,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Long Identifier,The length of the field DEFAULT_SESSION_ID_PARAMETER_NAME is 33.,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Magic Number,The method contains a magic number: 443,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Magic Number,The method contains a magic number: 80,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Magic Number,The method contains a magic number: 443,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,doIsEncodeable,Magic Number,The method contains a magic number: 80,168
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,toAbsolute,Complex Conditional,The conditional expression (scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443) is complex.,215
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,toAbsolute,Magic Number,The method contains a magic number: 80,215
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,toAbsolute,Magic Number,The method contains a magic number: 443,215
temp,org.jsecurity.web.servlet,JSecurityHttpServletResponse,toEncoded,Long Identifier,The length of the field DEFAULT_SESSION_ID_PARAMETER_NAME is 33.,293
temp,org.jsecurity.web.servlet,JSecurityHttpSession,JSecurityHttpSession,Long Statement,The length of the statement "String msg="Session constructor argument cannot be an instance of WebSession. This is enforced to " + "prevent circular dependencies and infinite loops.";" is 154.,48
temp,org.jsecurity.web.servlet,JSecurityHttpSession,setMaxInactiveInterval,Magic Number,The method contains a magic number: 1000,83
temp,org.jsecurity.web.servlet,JSecurityHttpSession,getMaxInactiveInterval,Magic Number,The method contains a magic number: 1000,91
temp,org.jsecurity.web.servlet,ServletContextSupport,bind,Long Statement,The length of the statement "String msg=name + " already bound to ServletContext. Please check your configuration to ensure " + "you don't have mutliple SecurityManager Loaders configured (listener` servlet` etc).";" is 186.,59
temp,org.jsecurity.web.servlet,ServletContextSupport,setSessionMode,Long Identifier,The length of the field SESSION_MODE_CONTEXT_PARAM_NAME is 31.,75
temp,org.jsecurity.web.servlet,ServletContextSupport,setSessionMode,Long Statement,The length of the statement "String msg="Unknown '" + SESSION_MODE_CONTEXT_PARAM_NAME + "' context-param value ["+ mode+ "]. Recognized values are '"+ HTTP_SESSION_MODE+ "' and '"+ JSECURITY_SESSION_MODE+ "' (without quotes). Please check your configuration and/or spelling.";" is 247.,75
temp,org.jsecurity.web.servlet,ServletContextSupport,applySessionMode,Long Identifier,The length of the field SESSION_MODE_CONTEXT_PARAM_NAME is 31.,90
temp,org.jsecurity.web.support,AbstractWebStore,storeValue,Long Statement,The length of the statement "log.debug("Found existing value stored under name [" + getName() + "]. Ignoring new "+ "storage request - this store is immutable after the value has initially been set.");" is 172.,228
temp,org.jsecurity.web.support,AuthenticationWebInterceptor,init,Long Statement,The length of the statement "log.info("No 'attemptedPageStorageScheme' attribute set - the user's attempted page will not " + "be available after the redirect to the login page.");" is 151.,188
temp,org.jsecurity.web.support,AuthenticationWebInterceptor,storeInJSecuritySession,Long Statement,The length of the statement "log.info("Encountered an invalid Session while attempting to set the " + "attempted page for authentication redirect."`e);" is 122.,213
temp,org.jsecurity.web.support,AuthenticationWebInterceptor,setSchemeAttemptedPage,Long Statement,The length of the statement "String msg="getAttemptedPageStorageScheme() did not return an expected value` " + "but was: [" + scheme.toString() + "]";" is 121.,252
temp,org.jsecurity.web.support,AuthenticationWebInterceptor,setSchemeAttemptedPage,Missing default,The following switch statement is missing a default case: switch (scheme) {,252
temp,org.jsecurity.web.support,AuthenticationWebInterceptor,handleUnauthenticatedRequest,Long Statement,The length of the statement "log.debug("User is not allowed to access page [" + attemptedPage + "] without "+ "first being authenticated. Redirecting to login page ["+ getRedirectUrl()+ "]");" is 162.,314
temp,org.jsecurity.web.support,CookieStore,onStoreValue,Long Statement,The length of the statement "log.trace("Added Cookie [" + name + "] to path ["+ path+ "] with value ["+ stringValue+ "] to the HttpServletResponse.");" is 121.,214
temp,org.jsecurity.web.support,DefaultWebRememberMeManager,ensureWebStore,Long Identifier,The length of the field DEFAULT_REMEMBER_ME_COOKIE_NAME is 31.,71
temp,org.jsecurity.web.support,DefaultWebSessionFactory,validateSessionOrigin,Long Statement,The length of the statement "String msg="No IP Address was specified when creating session with id [" + sessionId + "]. Attempting to access session from "+ "IP ["+ requestIp+ "]. Origin IP and request IP must match.";" is 189.,143
temp,org.jsecurity.web.support,DefaultWebSessionFactory,validateSessionOrigin,Long Statement,The length of the statement "String msg="Session with id [" + sessionId + "] originated from ["+ originIp+ "]` but the current HttpServletRequest originated "+ "from ["+ requestIp+ "]. Disallowing session access: "+ "session origin and request origin must match to allow access.";" is 251.,143
temp,org.jsecurity.web.support,DefaultWebSessionFactory,validateSessionOrigin,Long Statement,The length of the statement "String msg="No IP Address associated with the current HttpServletRequest. " + "Session with id [" + sessionId + "] originated from "+ "["+ originIp+ "]. Request IP must match the session's origin "+ "IP in order to gain access to that session.";" is 245.,143
temp,org.jsecurity.web.support,DefaultWebSessionFactory,retrieveSessionId,Long Statement,The length of the statement "request.setAttribute(JSecurityHttpServletRequest.REFERENCED_SESSION_ID_SOURCE`JSecurityHttpServletRequest.COOKIE_SESSION_ID_SOURCE);" is 132.,189
temp,org.jsecurity.web.support,DefaultWebSessionFactory,retrieveSessionId,Long Statement,The length of the statement "request.setAttribute(JSecurityHttpServletRequest.REFERENCED_SESSION_ID_SOURCE`JSecurityHttpServletRequest.URL_SESSION_ID_SOURCE);" is 129.,189
temp,org.jsecurity.web.support,RedirectView,urlEncode,Long Statement,The length of the statement "log.debug("Only JDK 1.3 URLEncoder available: using platform default encoding " + "instead of the requested scheme '" + encodingScheme + "'");" is 142.,236
temp,org.jsecurity.web.support,RedirectView,sendRedirect,Magic Number,The method contains a magic number: 303,271
temp,org.jsecurity.web.support,RequestParamStore,removeValue,Long Statement,The length of the statement "String msg="Asked to remove WebStore value. A " + getClass().getName() + " implementation "+ "cannot remove values from the request params.";" is 141.,31
temp,org.jsecurity.web.support,WebSession,WebSession,Long Statement,The length of the statement "String msg="HttpSession constructor argument cannot be an instance of JSecurityHttpSession. This " + "is enforced to prevent circular dependencies and infinite loops.";" is 168.,27
temp,org.jsecurity.web.support,WebSession,getTimeout,Magic Number,The method contains a magic number: 1000,61
temp,org.jsecurity.web.support,WebSession,setTimeout,Magic Number,The method contains a magic number: 1000,69
temp,org.jsecurity.web.support,WebSession,assertString,Long Statement,The length of the statement "String msg="HttpSession based implementations of the JSecurity Session interface requires attribute keys " + "to be String objects. The HttpSession class does not support anything other than String keys.";" is 205.,116
temp,org.jsecurity.web.tags,AuthenticatedTag,onDoStartTag,Long Statement,The length of the statement "log.trace("Security context does not exist or is not authenticated. 'authenticated' tag " + "body will not be evaluated.");" is 123.,39
temp,org.jsecurity.web.tags,PrincipalTag,getPrincipalProperty,Long Statement,The length of the statement "final String message="Property [" + property + "] not found in principal of type ["+ principal.getClass().getName()+ "]";" is 121.,164
temp,org.jsecurity.web.tags,PrincipalTag,getPrincipalProperty,Long Statement,The length of the statement "final String message="Error reading property [" + property + "] from principal of type ["+ principal.getClass().getName()+ "]";" is 127.,164
temp,org.jsecurity.spring,SpringJSecurityFilter,onFilterConfigSet,Long Identifier,The length of the field SECURITY_MANAGER_BEAN_NAME_PARAM_NAME is 37.,31
temp,org.jsecurity.spring,SpringJSecurityFilter,assertWebSecurityManager,Long Statement,The length of the statement "String msg="There is no " + SecurityManager.class.getName() + " instance bound in in the "+ "Spring WebApplicationContext under the name of '"+ getSecurityManagerBeanName()+ "'."+ " Please ensure that such a bean exists` or you can change which bean is accessed by "+ "setting the "+ getClass().getName()+ "#SecurityManagerBeanName attribute.";" is 344.,39
temp,org.jsecurity.spring,SpringJSecurityFilter,assertWebSecurityManager,Long Statement,The length of the statement "String msg="The " + getClass().getName() + " class requires the web application's "+ "SecurityManager instance to be of type ["+ SecurityManager.class.getName()+ " ].";" is 168.,39
temp,org.jsecurity.spring.remoting,SecureRemoteInvocationExecutor,invoke,Long Statement,The length of the statement "log.warn("RemoteInvocation object did not contain a JSecurity Session id under " + "attribute name [" + SecureRemoteInvocationFactory.SESSION_ID_KEY + "]. A Session will not "+ "be available to the method. Ensure that clients are using a "+ "SecureRemoteInvocationFactory to prevent this problem.");" is 299.,105
temp,org.jsecurity.spring.remoting,SecureRemoteInvocationExecutor,invoke,Long Statement,The length of the statement "SecurityContext securityContext=new DelegatingSecurityContext(principals`authenticated`inetAddress`session`securityManager);" is 124.,105
temp,org.jsecurity.spring.remoting,SecureRemoteInvocationFactory,createRemoteInvocation,Long Identifier,The length of the field SESSION_ID_SYSTEM_PROPERTY_NAME is 31.,50
temp,org.jsecurity.spring.remoting,SecureRemoteInvocationFactory,createRemoteInvocation,Long Statement,The length of the statement "throw new IllegalStateException("System property [" + SESSION_ID_SYSTEM_PROPERTY_NAME + "] is not set. "+ "This property must be set to the JSecurity session ID for remote calls to function.");" is 193.,50
temp,org.jsecurity.spring.security.interceptor,AuthorizationAttributeSourceAdvisor,matches,Long Statement,The length of the statement "return ((method.getAnnotation(PermissionsRequired.class) != null) || (method.getAnnotation(RolesRequired.class) != null));" is 122.,62
temp,org.jsecurity.spring.security.interceptor,AuthorizationAttributeSourceAdvisor,afterPropertiesSet,Long Statement,The length of the statement "log.trace("No authorization advice explicitly configured via the 'advice' " + "property. Attempting to set " + "default instance of type [" + AopAllianceAnnotationsAuthorizingMethodInterceptor.class.getName() + "]");" is 216.,78
temp,org.jsecurity.spring.servlet,SpringSecurityManagerListener,init,Long Identifier,The length of the field SECURITY_MANAGER_BEAN_NAME_PARAM_NAME is 37.,52
temp,org.jsecurity.spring.servlet,SpringSecurityManagerListener,assertSecurityManager,Long Statement,The length of the statement "String msg="There is no " + SecurityManager.class.getName() + " instance bound in in the "+ "Spring WebApplicationContext under the name of '"+ getSecurityManagerBeanName()+ "'."+ " Please ensure that such a bean exists` or you can change which bean is accessed by "+ "setting the "+ getClass().getName()+ "#SecurityManagerBeanName attribute.";" is 344.,60
